using System;using System.Web.Mvc;using EPiServer.Logging;using Microsoft.ApplicationInsights;namespace Netafim.WebPlatform.Web.Infrastructure.Mvc{    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, Inherited = true, AllowMultiple = true)]    public class CustomHandleErrorAttribute : HandleErrorAttribute    {        public override void OnException(ExceptionContext filterContext)        {            if (filterContext != null && filterContext.HttpContext != null && filterContext.Exception != null)            {                //If customError is Off, then AI HTTPModule will report the exception / standard epi logging                if (filterContext.HttpContext.IsCustomErrorEnabled)                {                    LogToAppInsights(filterContext);                    LogToEpiLogs(filterContext);                }            }            base.OnException(filterContext);        }        private void LogToEpiLogs(ExceptionContext filterContext)        {            var logger = LogManager.GetLogger(filterContext.Controller.GetType());            logger.Error("CustomHandleErrorAttribute handled exception", filterContext.Exception);        }        private static void LogToAppInsights(ExceptionContext filterContext)        {            var ai = new TelemetryClient();            ai.TrackException(filterContext.Exception);        }    }}